class User {
    static count: number = 0;

    constructor(private _name: string, private _login: string, private _password: string, private _grade: number) {
        User.count++;
    }

    get name(): string {
        return this._name;
    }

    set name(newName: string) {
        this._name = newName;
    }

    get login(): string {
        return this._login;
    }

    get password(): string {
        return '********';
    }

    showInfo(): void {
        console.log(`Name: ${this._name}, Login: ${this._login}`);
    }

    eq(otherUser: User): boolean {
        return this._grade === otherUser._grade;
    }

    lt(otherUser: User): boolean {
        return this._grade < otherUser._grade;
    }

    gt(otherUser: User): boolean {
        return this._grade > otherUser._grade;
    }
}

class SuperUser extends User {
    static count: number = 0;

    constructor(name: string, login: string, password: string, private role: string, grade: number) {
        super(name, login, password, grade);
        SuperUser.count++;
    }

    showInfo(): void {
        console.log(`Name: ${this.name}, Login: ${this.login}, Role: ${this.role}`);
    }
}

const user1 = new User('Paul McCartney', 'paul', '1234', 3);
const user2 = new User('George Harrison', 'george', '5678', 2);
const user3 = new User('Richard Starkey', 'ringo', '8523', 3);
const admin = new SuperUser('John Lennon', 'john', '0000', 'admin', 5);

user1.showInfo();
admin.showInfo();

const users = User.count;
const admins = SuperUser.count;

console.log(`Всего обычных пользователей: ${users}`);
console.log(`Всего супер-пользователей: ${admins}`);

console.log(user1.lt(user2));
console.log(admin.gt(user3));
console.log(user1.eq(user3));

user3.name = 'Ringo Starr';
user1.password = 'Pa$$w0rd';

console.log(user3.name);
console.log(user2.password);
console.log(user2.login);

try {

} catch (error) {
    console.log(error.message);
}
